-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")

-- Player references
local self = Players.LocalPlayer
local char = self.Character or self.CharacterAdded:Wait()
local root = char:WaitForChild("HumanoidRootPart")
local mouse = self:GetMouse()
local value = self:WaitForChild("Rebirths")

-- Load Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Window
local Window = Rayfield:CreateWindow({
	Name = "Shhhhh! - Meely & Adonis",
	LoadingTitle = "Miner's Haven Script",
	LoadingSubtitle = "By Skinny & Fat Studios",
	Theme = "Amethyst",
	KeySystem = false
})

-- Tabs and sections
local MainTab = Window:CreateTab("Farm")
MainTab:CreateSection("Auto")

-- New Tab for Auto features (used for Crates and Easter Egg)
local AutoCrateTab = Window:CreateTab("Auto")
AutoCrateTab:CreateSection("Crates")

-- Auto Collect Crates Toggle
local function getHRP()
	local character = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()
	return character:FindFirstChild("HumanoidRootPart")
end

AutoCrateTab:CreateToggle({
	Name = "Auto Collect Crates",
	CurrentValue = false,
	Flag = "AutoBoxes",
	Callback = function(Value)
		_G.AutoBoxes = Value
		if Value then
			task.spawn(function()
				while _G.AutoBoxes do
					pcall(function()
						local hrp = getHRP()
						if not hrp then return end
						for _, box in pairs(Workspace:FindFirstChild("Boxes"):GetChildren()) do
							firetouchinterest(hrp, box, 0)
							task.wait(0.1)
							firetouchinterest(hrp, box, 1)
						end
					end)
					task.wait(2)
				end
			end)
		end
	end,
})

-- State variables
local rebirthFarmingEnabled = false
local enableSecondLayout = false
local layoutDelay = 0
local layoutOne = "Layout1"
local layoutTwo = "Layout2"
local autoRebirthEnabled = false
local isEasterEggEnabled = false
local stopEasterEggs = false

-- Anti-AFK
Players.LocalPlayer.Idled:Connect(function()
	VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
	task.wait(1)
	VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

-- Main Functions
local function loadLayouts()
	task.spawn(function()
		ReplicatedStorage.Layouts:InvokeServer("Load", layoutOne)
		task.wait(layoutDelay)
		if enableSecondLayout then
			ReplicatedStorage.Layouts:InvokeServer("Load", layoutTwo)
		end
	end)
end

local function farmRebirth()
	task.spawn(function()
		while autoRebirthEnabled do
			ReplicatedStorage.Rebirth:InvokeServer(26)
			task.wait()
		end
	end)
end

-- UI Elements for Main Tab
MainTab:CreateToggle({
	Name = "Rebirth Farm",
	CurrentValue = false,
	Flag = "rebfarm",
	Callback = function(val)
		rebirthFarmingEnabled = val
		if val then
			loadLayouts()
			farmRebirth()
		end
	end
})

MainTab:CreateToggle({
	Name = "Enable Second Layout?",
	CurrentValue = false,
	Flag = "seclayout",
	Callback = function(val)
		enableSecondLayout = val
	end
})

MainTab:CreateToggle({
	Name = "Auto Rebirth",
	CurrentValue = false,
	Flag = "aReb",
	Callback = function(val)
		autoRebirthEnabled = val
		if val then
			farmRebirth()
		end
	end
})

MainTab:CreateDivider()
MainTab:CreateSection("Layouts")

MainTab:CreateInput({
	Name = "Time Between Layouts (Seconds)",
	PlaceholderText = "0",
	RemoveTextAfterFocusLost = true,
	Callback = function(val)
		layoutDelay = tonumber(val) or 0
	end
})

MainTab:CreateDropdown({
	Name = "Choose First Layout",
	Options = {"Layout1", "Layout2", "Layout3"},
	CurrentOption = "Layout1",
	Flag = "layoutone",
	Callback = function(option)
		layoutOne = option
		print("Selected:", option)
	end
})

MainTab:CreateDropdown({
	Name = "Choose Second Layout",
	Options = {"Layout1", "Layout2", "Layout3"},
	CurrentOption = "Layout2",
	Flag = "layoutwo",
	Callback = function(option)
		layoutTwo = option
		print("Selected:", option)
	end
})

-- Easter Egg Section
AutoCrateTab:CreateSection("Easter")

local function interactWithEasterEggs()
	local originalPosition = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	local easterthing = Workspace:FindFirstChild("Easter")
	if not easterthing then return end

	local mapthing = Workspace.Map:FindFirstChild("EGG_SPAWNS")
	if not mapthing then return end

	local eggSpawns = easterthing:FindFirstChild("EASTER ISLAND EGG SPAWNS")
	if eggSpawns then
		for _, v in ipairs(eggSpawns:GetChildren()) do
			if #v:GetChildren() > 0 then
				for _, child in ipairs(v:GetChildren()) do
					if stopEasterEggs then return end
					Players.LocalPlayer.Character.HumanoidRootPart.CFrame = child.CFrame
					task.wait(0.5)
					fireproximityprompt(child.ProximityPrompt)
					wait(0.5)
				end
			end
		end
	end

	if mapthing then
		for _, v in ipairs(mapthing:GetChildren()) do
			if #v:GetChildren() > 0 then
				for _, child in ipairs(v:GetChildren()) do
					if stopEasterEggs then return end
					print(child.Name)
					child:FindFirstChild("ProximityPrompt")
					Players.LocalPlayer.Character.HumanoidRootPart.CFrame = child.CFrame
					task.wait(0.5)
					fireproximityprompt(child.ProximityPrompt)
					wait(0.5)
				end
			end
		end
	end

	Players.LocalPlayer.Character.HumanoidRootPart.CFrame = originalPosition
end

AutoCrateTab:CreateToggle({
	Name = "AutoEgg",
	CurrentValue = isEasterEggEnabled,
	Flag = "EasterEggToggle",
	Callback = function(state)
		isEasterEggEnabled = state
		stopEasterEggs = not state
		if state then
			interactWithEasterEggs()
		else
			local originalPosition = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			Players.LocalPlayer.Character.HumanoidRootPart.CFrame = originalPosition
		end
	end
})

-- Auto load when Rebirths value changes
value:GetPropertyChangedSignal("Value"):Connect(function()
	task.wait(0.75)
	if rebirthFarmingEnabled then
		loadLayouts()
	end
end)
